// Generated by CoffeeScript 1.3.3
(function() {
  var ImtoError, inspect,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  inspect = require('util').inspect;

  global.pp = function(obj) {
    console.log("------------");
    return console.log(inspect(obj, true, 4, true));
  };

  global.p = function(node) {
    return process.stdout.write("============\n" + node + "\n");
  };

  global.ImtoError = ImtoError = (function(_super) {

    __extends(ImtoError, _super);

    function ImtoError(message, options) {
      this.message = message;
      this.toString = __bind(this.toString, this);

      ImtoError.__super__.constructor.call(this, message);
      if ((options != null ? options.tracking : void 0) != null) {
        this.tracking = options.tracking;
      }
    }

    ImtoError.prototype.toString = function() {
      return "{" + this.tracking.line + "," + this.tracking.column + "} " + this.message;
    };

    return ImtoError;

  })(Error);

}).call(this);
