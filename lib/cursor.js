// Generated by CoffeeScript 1.3.3
(function() {
  var Cursor,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Cursor = (function() {

    function Cursor(subject) {
      this.subject = subject;
      this.prev = __bind(this.prev, this);

      this.peek = __bind(this.peek, this);

      this.back = __bind(this.back, this);

      this.next = __bind(this.next, this);

      this.clone = __bind(this.clone, this);

      this.all = __bind(this.all, this);

      if (!this.subject) {
        this.subject = this;
      }
      this.index = 0;
    }

    Cursor.prototype.all = function() {
      var t, _results;
      _results = [];
      while (t = this.next()) {
        _results.push(t);
      }
      return _results;
    };

    Cursor.prototype.clone = function() {
      return new Cursor(this);
    };

    Cursor.prototype.next = function(i) {
      if (i == null) {
        i = 1;
      }
      return this.at((this.index += i) - 1);
    };

    Cursor.prototype.back = function(i) {
      if (i == null) {
        i = 1;
      }
      return this.at((this.index -= i) - 1);
    };

    Cursor.prototype.peek = function(i) {
      if (i == null) {
        i = 1;
      }
      return this.at((this.index + i) - 1);
    };

    Cursor.prototype.prev = function(i) {
      if (i == null) {
        i = 1;
      }
      return this.at((this.index - i) - 1);
    };

    return Cursor;

  })();

  module.exports = Cursor;

}).call(this);
